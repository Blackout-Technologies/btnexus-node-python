image: python:3.6-alpine

stages:
  - build
  - test
  - deploy
  - docu

build_package:
  stage: build
  script:
    - pip install .

run_tests:
  stage: test
  script:
    - pip install .
    - cd tests
    #- python -m unittest discover -s .

# TODO: uncomment after tests
# deploy_staging:
#   stage: deploy
#   variables:
#     TWINE_USERNAME: $STAGING_USERNAME # set in gitlab
#     TWINE_PASSWORD: $STAGING_PASSWORD
#   script:
#     - pip install twine==2.0
#     - python setup.py sdist
#     - twine upload --verbose --repository-url https://test.pypi.org/legacy/ dist/*
#   only:
#     - develop


docu_staging:
  # TODO: An image that can build the docu and has git
  image: alpine/git
  stage: docu
  variables:
    DOCUREPO: https://$GITUSER:$GITPW@github.com/Blackout-Technologies/Blackout-Technologies.github.io.git
    DOCUBUILDFOLDER: $CI_PROJECT_TITLE_$CI_COMMIT_REF_NAME
    DOCUFOLDER: Blackout-Technologies.github.io
  script:
    - git clone $DOCUREPO
    # TODO: make the docu
    - mkdir $DOCUBUILDFOLDER
    - echo "Hello World" > $DOCUBUILDFOLDER/index.html
    # TODO: copy docu into Blackout-Technologies.github.io
    - cp $DOCUBUILDFOLDER $DOCUFOLDER
    # TODO: cd into Blackout-Technologies.github.io
    - cd $DOCUFOLDER
    # TODO: git add -a
    - git add -A
    # TODO: git commit
    - git commit -m $CI_COMMIT_MESSAGE
    # TODO: git push
    - git push $DOCUREPO
  only:
    - develop

deploy_production:
  stage: deploy
  variables:
    TWINE_USERNAME: $PRODUCTION_USERNAME
    TWINE_PASSWORD: $PRODUCTION_PASSWORD
  script:
    - pip install twine==2.0
    - python setup.py sdist
    - twine upload --verbose dist/*
  only:
    - master